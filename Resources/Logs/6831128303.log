Sender: LSF System <lsfadmin@zhcc004>
Subject: Job 768141: <python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=3 -beta_robustness=0.05 -eta_train=0.026 -eta_mode=range -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=6831128303> in cluster <ZHC2clusterLSF> Exited

Job <python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=3 -beta_robustness=0.05 -eta_train=0.026 -eta_mode=range -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=6831128303> was submitted from host <zhcc022> by user <jbu> in cluster <ZHC2clusterLSF> at Tue Nov  2 14:09:20 2021
Job was executed on host(s) <zhcc004>, in queue <prod.med>, as user <jbu> in cluster <ZHC2clusterLSF> at Tue Nov  2 14:09:21 2021
</u/jbu> was used as the home directory.
</u/jbu/Master-Thesis> was used as the working directory.
Started at Tue Nov  2 14:09:21 2021
Terminated at Tue Nov  2 14:13:13 2021
Results reported at Tue Nov  2 14:13:13 2021

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=3 -beta_robustness=0.05 -eta_train=0.026 -eta_mode=range -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=6831128303
------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with exit code 1.

Resource usage summary:

    CPU time :                                   368.01 sec.
    Max Memory :                                 2037 MB
    Average Memory :                             1966.60 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              7
    Max Threads :                                131
    Run time :                                   233 sec.
    Turnaround time :                            233 sec.

The output (if any) follows:

Loaded pretrained model from /ibm/gpfs-homes/jbu/Master-Thesis/Resources/cifar10_pretrained_models/resnet32.th
Files already downloaded and verified
Files already downloaded and verified
Files already downloaded and verified
/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:136: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
 * Prec@1 93.900
 * Prec@1 19.920
 * Prec@1 20.820
 * Prec@1 18.920
 * Prec@1 20.440
 * Noisy Prec@1 20.06
After loading, with clipping@2.00 19.92 w/o 93.90 noisy: 20.06pm1.01
current lr 2.00000e-02
Epoch: [60][0/176]	Time 0.990 (0.990)	Data 0.462 (0.462)	Loss 1.1256 (1.1256)	Prec@1 85.547 (85.547)
Epoch: [60][17/176]	Time 0.526 (0.503)	Data 0.002 (0.027)	Loss 0.9157 (0.9923)	Prec@1 93.750 (94.314)
Epoch: [60][34/176]	Time 0.464 (0.489)	Data 0.001 (0.014)	Loss 0.9140 (0.9545)	Prec@1 92.969 (93.717)
Epoch: [60][51/176]	Time 0.474 (0.482)	Data 0.001 (0.010)	Loss 0.7802 (0.9080)	Prec@1 93.750 (93.547)
Epoch: [60][68/176]	Time 0.463 (0.478)	Data 0.001 (0.008)	Loss 0.7404 (0.8716)	Prec@1 91.797 (93.552)
Epoch: [60][85/176]	Time 0.463 (0.475)	Data 0.001 (0.007)	Loss 0.7783 (0.8482)	Prec@1 95.312 (93.655)
Epoch: [60][102/176]	Time 0.463 (0.473)	Data 0.001 (0.006)	Loss 0.7064 (0.8300)	Prec@1 94.531 (93.674)
Epoch: [60][119/176]	Time 0.463 (0.472)	Data 0.001 (0.005)	Loss 0.7161 (0.8129)	Prec@1 94.531 (93.776)
Epoch: [60][136/176]	Time 0.463 (0.471)	Data 0.001 (0.005)	Loss 0.7766 (0.7995)	Prec@1 91.797 (93.767)
Epoch: [60][153/176]	Time 0.464 (0.471)	Data 0.001 (0.004)	Loss 0.6413 (0.7877)	Prec@1 94.141 (93.737)
Epoch: [60][170/176]	Time 0.459 (0.470)	Data 0.000 (0.004)	Loss 0.6394 (0.7748)	Prec@1 95.312 (93.876)
 * Prec@1 87.920
 * Prec@1 87.400
 * Prec@1 87.520
 * Prec@1 87.680
 * Noisy Prec@1 87.53
	 * New best: 87.53333
current lr 2.00000e-02
Epoch: [61][0/176]	Time 1.064 (1.064)	Data 0.502 (0.502)	Loss 0.7013 (0.7013)	Prec@1 94.531 (94.531)
Epoch: [61][17/176]	Time 0.463 (0.508)	Data 0.001 (0.029)	Loss 0.6411 (0.6424)	Prec@1 93.750 (95.009)
Epoch: [61][34/176]	Time 0.470 (0.489)	Data 0.001 (0.015)	Loss 0.6343 (0.6407)	Prec@1 94.922 (94.777)
Epoch: [61][51/176]	Time 0.463 (0.482)	Data 0.001 (0.011)	Loss 0.6106 (0.6354)	Prec@1 94.531 (94.899)
Epoch: [61][68/176]	Time 0.463 (0.480)	Data 0.001 (0.008)	Loss 0.6567 (0.6376)	Prec@1 93.359 (94.712)
Epoch: [61][85/176]	Time 0.464 (0.478)	Data 0.001 (0.007)	Loss 0.6131 (0.6298)	Prec@1 94.922 (94.876)
Epoch: [61][102/176]	Time 0.464 (0.476)	Data 0.001 (0.006)	Loss 0.6363 (0.6291)	Prec@1 93.359 (94.804)
Epoch: [61][119/176]	Time 0.463 (0.475)	Data 0.001 (0.005)	Loss 0.5799 (0.6242)	Prec@1 95.703 (94.857)
Epoch: [61][136/176]	Time 0.463 (0.474)	Data 0.001 (0.005)	Loss 0.6146 (0.6202)	Prec@1 93.750 (94.879)
Epoch: [61][153/176]	Time 0.464 (0.474)	Data 0.001 (0.004)	Loss 0.6383 (0.6215)	Prec@1 93.750 (94.782)
Epoch: [61][170/176]	Time 0.459 (0.473)	Data 0.000 (0.004)	Loss 0.5183 (0.6197)	Prec@1 95.312 (94.769)
 * Prec@1 89.560
 * Prec@1 89.080
 * Prec@1 89.280
 * Prec@1 88.860
 * Noisy Prec@1 89.07
	 * New best: 89.07333
current lr 2.00000e-02
Epoch: [62][0/176]	Time 0.976 (0.976)	Data 0.492 (0.492)	Loss 0.5583 (0.5583)	Prec@1 96.094 (96.094)
Epoch: [62][17/176]	Time 0.464 (0.495)	Data 0.001 (0.028)	Loss 0.5484 (0.5951)	Prec@1 96.094 (94.423)
Epoch: [62][34/176]	Time 0.466 (0.481)	Data 0.001 (0.015)	Loss 0.5673 (0.5947)	Prec@1 94.922 (94.464)
Epoch: [62][51/176]	Time 0.463 (0.475)	Data 0.001 (0.011)	Loss 0.6946 (0.5961)	Prec@1 92.188 (94.576)
Epoch: [62][68/176]	Time 0.464 (0.473)	Data 0.001 (0.008)	Loss 0.5434 (0.5902)	Prec@1 94.922 (94.577)
Epoch: [62][85/176]	Time 0.463 (0.471)	Data 0.001 (0.007)	Loss 0.6657 (0.5871)	Prec@1 92.578 (94.654)
Traceback (most recent call last):
  File "trainer_resnet.py", line 339, in <module>
    main()
  File "trainer_resnet.py", line 144, in main
    train(train_loader, model, criterion, optimizer, epoch, args=args, clip_fn=clip_weights)
  File "trainer_resnet.py", line 219, in train
    epoch=epoch - args.start_epoch
  File "/ibm/gpfs-homes/jbu/Master-Thesis/Losses/torch_loss.py", line 138, in compute_gradient_and_backward
    X
  File "/ibm/gpfs-homes/jbu/Master-Thesis/Losses/torch_loss.py", line 75, in _adversarial_loss
    self.model_theta_star.load_state_dict({**model.state_dict(),**theta_star})
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1037, in load_state_dict
    load(self)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1035, in load
    load(child, prefix + name + '.')
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1035, in load
    load(child, prefix + name + '.')
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1035, in load
    load(child, prefix + name + '.')
  [Previous line repeated 1 more time]
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1032, in load
    state_dict, prefix, local_metadata, True, missing_keys, unexpected_keys, error_msgs)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 994, in _load_from_state_dict
    if key.startswith(prefix):
KeyboardInterrupt
