Sender: LSF System <lsfadmin@zhcc007>
Subject: Job 777175: <python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=10 -beta_robustness=0.0 -gamma=0.0 -eps_pga=0.0 -eta_train=0.075 -eta_mode=ind -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=5848671138> in cluster <ZHC2clusterLSF> Exited

Job <python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=10 -beta_robustness=0.0 -gamma=0.0 -eps_pga=0.0 -eta_train=0.075 -eta_mode=ind -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=5848671138> was submitted from host <zhcc022> by user <jbu> in cluster <ZHC2clusterLSF> at Tue Nov 23 12:49:16 2021
Job was executed on host(s) <zhcc007>, in queue <prod.med>, as user <jbu> in cluster <ZHC2clusterLSF> at Tue Nov 23 12:49:17 2021
</u/jbu> was used as the home directory.
</u/jbu/Resnet32-ICLR> was used as the working directory.
Started at Tue Nov 23 12:49:17 2021
Terminated at Tue Nov 23 12:50:28 2021
Results reported at Tue Nov 23 12:50:28 2021

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python3 trainer_resnet.py -seed=0 -batch_size=256 -weight_decay=0.0005 -momentum=0.9 -save_every=10 -lr=0.1 -n_attack_steps=10 -beta_robustness=0.0 -gamma=0.0 -eps_pga=0.0 -eta_train=0.075 -eta_mode=ind -clipping_alpha=2.0 -attack_size_mismatch=0.2 -initial_std=0.001 -pretrained -burn_in=0 -workers=4 -n_epochs=300 -dataset=cifar10 -architecture=resnet32 -start_epoch=60 -data_dir=/dataP/jbu -session_id=5848671138
------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with exit code 1.

Resource usage summary:

    CPU time :                                   235.04 sec.
    Max Memory :                                 2057 MB
    Average Memory :                             1248.69 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              7
    Max Threads :                                133
    Run time :                                   78 sec.
    Turnaround time :                            72 sec.

The output (if any) follows:

Loaded pretrained model from /ibm/gpfs-homes/jbu/Resnet32-ICLR/Resources/cifar10_pretrained_models/resnet32.th
Files already downloaded and verified
Files already downloaded and verified
Files already downloaded and verified
/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:136: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
 * Prec@1 94.280
 * Prec@1 15.320
 * Prec@1 16.420
 * Prec@1 15.040
 * Prec@1 15.920
 * Noisy Prec@1 15.79
After loading, with clipping@2.00 15.32 w/o 94.28 noisy: 15.79pm0.70
current lr 2.00000e-02
Epoch: [60][0/176]	Time 0.584 (0.584)	Data 0.480 (0.480)	Loss 0.8340 (0.8340)	Prec@1 87.109 (87.109)
Epoch: [60][17/176]	Time 0.071 (0.100)	Data 0.001 (0.028)	Loss 0.6203 (0.7685)	Prec@1 90.234 (90.929)
Epoch: [60][34/176]	Time 0.071 (0.086)	Data 0.001 (0.015)	Loss 0.5716 (0.7088)	Prec@1 87.500 (90.391)
Epoch: [60][51/176]	Time 0.071 (0.082)	Data 0.001 (0.010)	Loss 0.5301 (0.6541)	Prec@1 93.359 (91.354)
Epoch: [60][68/176]	Time 0.071 (0.079)	Data 0.001 (0.008)	Loss 0.4754 (0.6163)	Prec@1 95.312 (91.944)
Epoch: [60][85/176]	Time 0.071 (0.077)	Data 0.001 (0.007)	Loss 0.5454 (0.5975)	Prec@1 95.312 (92.360)
Epoch: [60][102/176]	Time 0.071 (0.076)	Data 0.001 (0.006)	Loss 0.4635 (0.5847)	Prec@1 93.359 (92.525)
Epoch: [60][119/176]	Time 0.080 (0.076)	Data 0.001 (0.005)	Loss 0.4623 (0.5708)	Prec@1 94.141 (92.643)
Epoch: [60][136/176]	Time 0.073 (0.075)	Data 0.001 (0.005)	Loss 0.5098 (0.5587)	Prec@1 93.359 (92.852)
Epoch: [60][153/176]	Time 0.082 (0.075)	Data 0.002 (0.004)	Loss 0.3591 (0.5489)	Prec@1 97.266 (93.037)
Epoch: [60][170/176]	Time 0.070 (0.075)	Data 0.000 (0.004)	Loss 0.4082 (0.5386)	Prec@1 96.094 (93.261)
 * Prec@1 82.480
 * Prec@1 81.840
 * Prec@1 82.040
 * Prec@1 81.080
 * Noisy Prec@1 81.65
	 * New best: 81.65334
current lr 2.00000e-02
Epoch: [61][0/176]	Time 0.509 (0.509)	Data 0.432 (0.432)	Loss 0.4646 (0.4646)	Prec@1 95.703 (95.703)
Epoch: [61][17/176]	Time 0.071 (0.098)	Data 0.001 (0.025)	Loss 0.4351 (0.4168)	Prec@1 94.922 (95.725)
Epoch: [61][34/176]	Time 0.071 (0.085)	Data 0.001 (0.014)	Loss 0.3656 (0.4195)	Prec@1 96.094 (95.558)
Epoch: [61][51/176]	Time 0.089 (0.082)	Data 0.002 (0.010)	Loss 0.4646 (0.4265)	Prec@1 94.531 (95.448)
Epoch: [61][68/176]	Time 0.072 (0.080)	Data 0.002 (0.008)	Loss 0.3890 (0.4341)	Prec@1 95.312 (95.273)
Epoch: [61][85/176]	Time 0.071 (0.078)	Data 0.001 (0.006)	Loss 0.4736 (0.4320)	Prec@1 93.359 (95.217)
Epoch: [61][102/176]	Time 0.071 (0.077)	Data 0.001 (0.005)	Loss 0.4096 (0.4308)	Prec@1 96.484 (95.252)
Epoch: [61][119/176]	Time 0.072 (0.076)	Data 0.002 (0.005)	Loss 0.3711 (0.4277)	Prec@1 96.484 (95.247)
Epoch: [61][136/176]	Time 0.075 (0.076)	Data 0.001 (0.004)	Loss 0.4744 (0.4255)	Prec@1 92.578 (95.238)
Epoch: [61][153/176]	Time 0.071 (0.075)	Data 0.001 (0.004)	Loss 0.4211 (0.4276)	Prec@1 94.531 (95.112)
Epoch: [61][170/176]	Time 0.069 (0.075)	Data 0.000 (0.004)	Loss 0.4078 (0.4260)	Prec@1 95.312 (95.141)
 * Prec@1 85.380
 * Prec@1 84.920
 * Prec@1 85.220
 * Prec@1 85.200
 * Noisy Prec@1 85.11
	 * New best: 85.11333
current lr 2.00000e-02
Epoch: [62][0/176]	Time 0.572 (0.572)	Data 0.500 (0.500)	Loss 0.4258 (0.4258)	Prec@1 95.312 (95.312)
Epoch: [62][17/176]	Time 0.071 (0.103)	Data 0.001 (0.029)	Loss 0.3406 (0.4091)	Prec@1 96.875 (94.922)
Epoch: [62][34/176]	Time 0.071 (0.088)	Data 0.001 (0.016)	Loss 0.3978 (0.4012)	Prec@1 95.312 (95.190)
Epoch: [62][51/176]	Time 0.071 (0.083)	Data 0.001 (0.011)	Loss 0.4581 (0.4072)	Prec@1 95.312 (95.252)
Epoch: [62][68/176]	Time 0.071 (0.080)	Data 0.001 (0.009)	Loss 0.3668 (0.4073)	Prec@1 96.484 (95.318)
Epoch: [62][85/176]	Time 0.071 (0.078)	Data 0.001 (0.007)	Loss 0.4436 (0.4058)	Prec@1 95.703 (95.340)
Epoch: [62][102/176]	Time 0.071 (0.077)	Data 0.001 (0.006)	Loss 0.4015 (0.4088)	Prec@1 95.312 (95.267)
Epoch: [62][119/176]	Time 0.073 (0.076)	Data 0.002 (0.005)	Loss 0.4000 (0.4066)	Prec@1 94.922 (95.208)
Epoch: [62][136/176]	Time 0.071 (0.076)	Data 0.001 (0.005)	Loss 0.3940 (0.4080)	Prec@1 95.703 (95.198)
Epoch: [62][153/176]	Time 0.071 (0.076)	Data 0.001 (0.005)	Loss 0.4642 (0.4086)	Prec@1 94.141 (95.148)
Epoch: [62][170/176]	Time 0.069 (0.075)	Data 0.000 (0.004)	Loss 0.3943 (0.4081)	Prec@1 96.094 (95.123)
 * Prec@1 86.940
 * Prec@1 86.200
 * Prec@1 86.020
 * Prec@1 86.820
 * Noisy Prec@1 86.35
	 * New best: 86.34667
current lr 2.00000e-02
Epoch: [63][0/176]	Time 0.585 (0.585)	Data 0.502 (0.502)	Loss 0.4400 (0.4400)	Prec@1 93.750 (93.750)
Traceback (most recent call last):
  File "trainer_resnet.py", line 222, in train
    output = model(input_var) #! This is inefficient, right?
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 159, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/ibm/gpfs-homes/jbu/Resnet32-ICLR/Architectures/cifar_resnet.py", line 109, in forward
    out = self.layer2(out)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/ibm/gpfs-homes/jbu/Resnet32-ICLR/Architectures/cifar_resnet.py", line 76, in forward
    out = F.relu(self.bn1(self.conv1(x)))
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/u/jbu/.conda/envs/msc/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 111, in forward
    self.num_batches_tracked = self.num_batches_tracked + 1
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "trainer_resnet.py", line 333, in <module>
    main()
  File "trainer_resnet.py", line 138, in main
    train(train_loader, model, criterion, optimizer, epoch, args=args, clip_fn=clip_weights)
  File "trainer_resnet.py", line 222, in train
    output = model(input_var) #! This is inefficient, right?
KeyboardInterrupt
